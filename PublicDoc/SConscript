# -----------------------------------------------------------------------------
# scons configuration for public documentation using Sphinx.
#
# Generates public documentation using Jekyll in the "PublicDoc/site"
# subdirectory of the build directory.
# -----------------------------------------------------------------------------

from os      import environ, walk
from os.path import basename, join

Import('snapimage', 'doc_build_dir', 'APP_NAME', 'VERSION_STRING')

# Recursive function to find all files under a root directory.
def FindAllSources(root_dir):
    sources = []
    for root, dirnames, filenames in walk(root_dir, topdown=True):
        # Skip directories beginning with '.'.
        [dirnames.remove(d) for d in list(dirnames) if d.startswith('.')]
        sources += [join(root, fn) for fn in filenames]
    return sources

# -----------------------------------------------------------------------------
# Environment.
# -----------------------------------------------------------------------------

env = Environment(
    OUTPUT_DIR = f'#{doc_build_dir}/PublicDoc',

    # Copy the environment variables for the snapimage application.
    ENV = environ.copy(),
)

# Pass values through to sphinx-build via environment variables.
env.Append(
    ENV = {
        'PROJECT' : APP_NAME,
        'VERSION' : VERSION_STRING,
    },
)

# -----------------------------------------------------------------------------
# Snapshot Image generation.
# -----------------------------------------------------------------------------

script_dir = './snaps/scripts'
image_dir  = './docs/images'

image_names = [
    'Doorstop',
    'Logo',
]

scripts      = Glob(f'{script_dir}/*', strings=True)
script_files = [basename(script) for script in scripts]
image_files  = [join(image_dir, name + '.jpg') for name in image_names]

snaps = env.Command(image_files, [snapimage] + scripts,
                    [(snapimage.abspath + ' ' + sf) for sf in script_files])

env.Alias('Snaps', snaps)

# -----------------------------------------------------------------------------
# Documentation generation.
# -----------------------------------------------------------------------------

sources = FindAllSources('docs')
output_dir = env.Dir('$OUTPUT_DIR').abspath

sphinx_args = ' '.join([
    '-W',    # Treat warnings as errors,
    '-E',    # Rebuild if anything changes (no environment cache).
    '-a',    # Write all files.
])

doc = env.Command('$OUTPUT_DIR/index.html', sources + snaps,
                  ['echo = Building public doc for version: $VERSION_STRING',
                   f'sphinx-build {sphinx_args} docs {output_dir}'],
                  chdir='PublicDoc')
Return('doc')
