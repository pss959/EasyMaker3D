# -----------------------------------------------------------------------------
# Generates videos for public documentation using the capturevideo application.
# -----------------------------------------------------------------------------

from os      import environ
from os.path import join

Import('capturevideo')

# -----------------------------------------------------------------------------
# Environment.
# -----------------------------------------------------------------------------

env = Environment(
    # Copy the environment variables for the capturevideo application.
    ENV = environ.copy(),
)

# -----------------------------------------------------------------------------
# Snapshot Video generation and annotation.
# -----------------------------------------------------------------------------

root_dir   = env.Dir('#').abspath   # Work around SCons issue.
video_dir  = './docs/extra/videos'
script_dir = './videos/scripts'

# List of capturevideo script files.
scripts = [
    'Doorstop',
    'GeneralTools',
    'SpecializedTools',
    'WorkArea',
]

def VideoFile(name):
  return join(video_dir, name + '.mp4')

# Video script processing.
videos = []
for script in scripts:
    script_file  = script + '.econf'
    video_format = 'yuvmp4'
    video = env.Command(VideoFile(script),
                        [capturevideo, join(script_dir, script_file)],
                        [Mkdir(video_dir),
                         f'{capturevideo.abspath} --format={video_format}' +
                         f' {script_file}'],
                        chdir=root_dir)
    # This prevents capturevideo from running in parallel.
    env.SideEffect('dummy', video)
    videos.append(video)

env.Alias('Videos', videos)

Return('videos')
