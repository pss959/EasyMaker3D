LightingPass $LIGHTING_PASS {
  shader_programs: [
    ShaderProgram "Lighting" {
      vertex_source:   ShaderSource { path: "Lighting_vp.glsl" },
      fragment_source: ShaderSource { path: "Lighting_fp.glsl" },

      uniform_defs: [
        #------------------------------------------------------------------
        # These Uniforms are set only in the root node.
        #------------------------------------------------------------------

        # Position of the viewpoint in world coordinates.
        UniformDef "uViewPos"       { value_type: "kFloatVector3Uniform" },

        # The number of lights.
        UniformDef "uLightCount"    { value_type: "kIntUniform" },

        # Each of these is per light:
        UniformDef "uLightPos"       { value_type: "kFloatVector3Uniform" },
        UniformDef "uLightColor"     { value_type: "kFloatVector4Uniform" },
        UniformDef "uLightMatrix"    { value_type: "kMatrix4x4Uniform", },
        UniformDef "uLightShadowMap" { value_type: "kTextureUniform", },

        #------------------------------------------------------------------
        # These Uniforms may appear in any node.
        #------------------------------------------------------------------
        UniformDef "uEmissiveColor"  { value_type: "kFloatVector4Uniform" },
        UniformDef "uSmoothness"     { value_type: "kFloatUniform" },
        UniformDef "uMetalness"      { value_type: "kFloatUniform" },
        UniformDef "uAmbientIntens"  { value_type: "kFloatUniform" },
        UniformDef "uShowTexture"    { value_type: "kIntUniform" },
        UniformDef "uTextureScale"   { value_type: "kFloatVector2Uniform" },
        UniformDef "uTexture"        { value_type: "kTextureUniform" },
        UniformDef "uReceiveShadows" { value_type: "kIntUniform", },
      ],

      blocks: UniformBlock {
        [ # Some shorthand constants:
          LCT:    "count: $LIGHT_COUNT",
          MAT4_0: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        ],
        textures: [
          Texture {
            uniform_name: "uTexture",
            image:   FileImage { path: "White.jpg" },
            sampler: Sampler {},
          },
          Texture "ShadowMap Texture" {
            $LCT,  # One per light.
            uniform_name: "uLightShadowMap",
          },
        ],
        uniforms: [
          # Define default values for these. Other nodes may override them.
          Uniform "uBaseColor"      { vec4f_val: .7 .7 .7 1 }
          Uniform "uEmissiveColor"  { vec4f_val: 0 0 0 0 },
          Uniform "uSmoothness"     { float_val: 0 },
          Uniform "uMetalness"      { float_val: 0 },
          Uniform "uAmbientIntens"  { float_val: .3 },
          Uniform "uShowTexture"    { int_val: 0 },
          Uniform "uTextureScale"   { vec2f_val: 1 1 },
          Uniform "uReceiveShadows" { int_val: 1 },  # Receive by default.

          # Real values will be set for these by the LightingPass object.
          Uniform "uViewportSize"     { vec2i_val:       0 0 },
          Uniform "uViewPos"          { vec3f_val:       0 0 0 },
          Uniform "uLightCount"       { int_val:         0 },
          Uniform "uProjectionMatrix" { mat4_val:        $MAT4_0 },
          Uniform "uViewMatrix"       { mat4_val:        $MAT4_0 },
          Uniform "uLightPos"         { $LCT, vec3f_val: 0 0 0 },
          Uniform "uLightColor"       { $LCT, vec4f_val: 0 0 0 0 },
          Uniform "uLightMatrix"      { $LCT, mat4_val:  $MAT4_0 },
        ],
      },
    },

    ShaderProgram "Faceted" {
      uniform_defs: [
        # Uniforms are set only in the root node.

        # Position of the viewpoint in world coordinates.
        UniformDef "uViewPos"       { value_type: "kFloatVector3Uniform" },

        # The number of lights.
        UniformDef "uLightCount"    { value_type: "kIntUniform" },

        # Each of these is per light:
        UniformDef "uLightPos"       { value_type: "kFloatVector3Uniform" },
        UniformDef "uLightColor"     { value_type: "kFloatVector4Uniform" },
        UniformDef "uLightMatrix"    { value_type: "kMatrix4x4Uniform", },
        UniformDef "uLightShadowMap" { value_type: "kTextureUniform", },
      ],
      vertex_source:   ShaderSource { path: "Faceted_vp.glsl" },
      geometry_source: ShaderSource { path: "Faceted_gp.glsl" },
      fragment_source: ShaderSource { path: "Faceted_fp.glsl" },
    },

    ShaderProgram "BaseColor" {
      vertex_source:   ShaderSource { path: "BaseColor_vp.glsl" },
      fragment_source: ShaderSource { path: "BaseColor_fp.glsl" },
    },
  ],

  root_node: ShaderNode $LIGHTING_PASS {
    shader_name: "Lighting",
    state_table: StateTable {
      clear_color:        0 0 0 1,
      clear_depth:        1,
      depth_test_enabled: true,
      cull_face_enabled:  true,
      cull_face_mode:     "kCullBack",
    },
    children: [
      Node "Main";,   # Instance main root from ShadowPass.
      <"nodes/Debugging.mvn">,
    ],
  }
}
