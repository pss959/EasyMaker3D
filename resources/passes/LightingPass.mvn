LightingPass "Lighting Pass" {
  root: Node "Lighting Root" {
    [ LCT: "count: $LIGHT_COUNT" ],  # Shorthand.
    state_table: StateTable {
      clear_color:        0 0 0 1,
      clear_depth:        1,
      depth_test_enabled: true,
      cull_face_enabled:  true,
      cull_face_mode:     "kCullBack",
    },
    shader: Shader "Lighting" {
      uniform_defs: [
        UniformDef "uAmbientIntens" { value_type: "kFloatUniform" },
        UniformDef "uShowTexture"   { value_type: "kIntUniform" },
        UniformDef "uTexture"       { value_type: "kTextureUniform" },
        UniformDef "uTextureScale"  { value_type: "kFloatVector2Uniform" },
        UniformDef "uLightCount"    { value_type: "kIntUniform" },

        # Each of these is per light:
        UniformDef "uBiasMatrix"  { value_type: "kMatrix4x4Uniform", },
        UniformDef "uLightPos"    { value_type: "kFloatVector3Uniform" },
        UniformDef "uLightColor"  { value_type: "kFloatVector4Uniform" },
      ],
      vertex_source:   ShaderSource { path: "lighting_vp.glsl" },
      fragment_source: ShaderSource { path: "lighting_fp.glsl" },
    },
    textures: [
      Texture "Default Texture" {
        uniform_name: "uTexture",
        image:   Image { path: "White.jpg" },
        sampler: Sampler "DefaultSampler" {},
      },
      Texture "ShadowMap Texture" {
        count:         $LIGHT_COUNT,
        uniform_name: "uShadowMap",
      },
    ],
    uniforms: [
      Uniform "uBaseColor"     { vec4f_val: .7 .7 .7 1 }
      Uniform "uAmbientIntens" { float_val: .1 },
      Uniform "uTextureScale"  { vec2f_val: 1 1 },
      Uniform "uShowTexture"   { int_val: 0 },
      Uniform "uLightCount"    { int_val: 0 },

      # Each of these is per light. Their values are set by the LightingPass.
      Uniform "uBiasMatrix"  { $LCT, mat4_val: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 },
      Uniform "uLightPos"    { $LCT, vec3f_val: 0 0 0 },
      Uniform "uLightColor"  { $LCT, vec4f_val: 0 0 0 0 },
    ],
    children: [
      Node "Main Root";
      <"nodes/DebugText.mvn">,
    ],
  }
}
