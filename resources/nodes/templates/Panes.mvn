# GUI Panes.
Node "Panes" {
  [ # Shorthand for instantiating pane templates.
    BG:       "INSTANCE \"T_PaneBackground\"",
    BORDER:   "INSTANCE \"T_PaneBorder\"",
    BUTTON:   "INSTANCE \"T_ButtonPane\"",
    CHECKBOX: "INSTANCE \"T_CheckboxPane\"",
    IMAGE:    "INSTANCE \"T_ImagePane\"",
    INPUT:    "INSTANCE \"T_TextInputPane\"",
    TEXT:     "INSTANCE \"T_TextPane\"",

    # Size values for consistency.
    TITLE_TEXT_SIZE: "base_size: 1 1.8",

    # Other convenient shorthand.
    CENTER_TEXT: "halignment: \"kAlignHCenter\", valignment: \"kAlignVCenter\"",
  ],

  children: [
    TEMPLATE ButtonPane "T_ButtonPane" {
      padding: .4,
      border: $BORDER { width: 2, color: "#000000" },
      children: [
        PushButtonWidget "Button" {
          shapes: [ Rectangle {} ],
        }
      ]
    },

    TEMPLATE CheckboxPane "T_CheckboxPane" {
      base_size: 1.3 1.3,
      border: $BORDER { width: 2, color: "#000000" },
      blocks: [ UniformBlock {
        pass_name: $LIGHTING_PASS,
        uniforms: [ Uniform "uBaseColor" { vec4f_val: "#cccccc" } ],
      } ],
      shapes: [ Rectangle {} ],
      children: [
        PushButtonWidget "Button" {
          translation: 0 0 .2,        # In front of check rectangle.
          disabled_flags: "kRender",  # Just for intersection testing.
          shapes: [ Rectangle {} ],
        },
        Node "Check" {
          disabled_flags: "kTraversal", # Turn off until state is known.
          scale: .5 .5 .5,
          translation: 0 0 .1,        # In front of canvas.
          blocks: [ UniformBlock {
            pass_name: $LIGHTING_PASS,
            uniforms: [ Uniform "uBaseColor" { vec4f_val: "#222222" } ],
          } ],
          shapes: [ Rectangle {} ],
        }
      ]
    },

    TEMPLATE ImagePane "T_ImagePane" {
      blocks: [
        UniformBlock {
          pass_name: $LIGHTING_PASS,
          textures: [
            Texture "ImagePane Texture" {
              uniform_name: "uTexture",
              image: FileImage "ImagePane Image" {},
              sampler: USE Sampler "DefaultSampler",
            },
          ],
          uniforms: [
            Uniform "uShowTexture" { int_val:   1 },
            Uniform "uBaseColor"   { vec4f_val: "#ffffff" },
          ],
        }
      ],
      shapes: [ Rectangle {} ],
    },

    TEMPLATE TextPane "T_TextPane" {
      children: [
        TextNode "Text" {
          text: ".",   # Has to be non-empty for Ion to set up.
          color: "#000000",
          font_name: "Verdana",
          half_smooth_width: 1,
          outline_width: 0,
          layout: LayoutOptions {
            halignment: "kAlignHCenter",
            valignment: "kAlignVCenter",
          }
        }
      ]
    },

    TEMPLATE TextInputPane "T_TextInputPane" {
      background: $BG "Background" { color: "#ddddbb" },
      border: $BORDER { width: 2, color: "#000000" },
      padding: .4,
      orientation: "kHorizontal",
      resize_width: True,
      panes: [
        INSTANCE "T_TextPane" "Text" {
          base_size:  .6 .6,
          font_name:  "Mono",
          halignment: "kAlignLeft",
          valignment: "kAlignVCenter",
          text:       ".",   # Has to be non-empty
        },
        SpacerPane { resize_width: True },
      ],
      children: [
        PushButtonWidget "Button" {
          disabled_flags: "kRender",  # Just for intersection testing.
          shapes: [ Rectangle {} ],
        },
        Node "Cursor" {
          disabled_flags: "kTraversal",
          shader_names: ["BaseColor"],
          state_table: StateTable { line_width: 2 },
          blocks: [ UniformBlock {
            pass_name: $LIGHTING_PASS,
            uniforms: [ Uniform "uBaseColor" { vec4f_val: "#ff0000" } ],
          } ],
          shapes: [
            Line     { end0: 0 -.3 0, end1: 0 .3 0 },
            PolyLine { points: [-.02 -.4  0,
                                  0  -.3  0,
                                 .02 -.4  0] },
            PolyLine { points: [-.02  .4  0,
                                  0   .3  0,
                                 .02  .4  0] },
          ],
        }
      ]
    },

    # Top-level Panes used in panels.
    <"nodes/templates/FilePane.mvn">,
    <"nodes/templates/HelpPane.mvn">,
    <"nodes/templates/SessionPane.mvn">,
    <"nodes/templates/SettingsPane.mvn">,
  ]
}
