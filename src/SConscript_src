from itertools import chain

Import('app_dict', 'lib_env')

# -----------------------------------------------------------------------------
# Create the special version of the openvr.h header file for files that need
# it. This keeps OpenVR from crashing on Windows and may help elsewhere?
# -----------------------------------------------------------------------------

fixed_openvr_h = File('#/$BUILD_DIR/include/openvr-fixed.h').abspath
orig_openvr_h  = File('#/submodules/openvr/headers/openvr.h').abspath

lib_env.Command(
    fixed_openvr_h, [orig_openvr_h, '#/bin/fix-openvr-header.py'],
    [Mkdir('$BUILD_DIR/include'),
     f'python3 bin/fix-openvr-header.py {orig_openvr_h} {fixed_openvr_h}'])

# -----------------------------------------------------------------------------
# Helper functions.
# -----------------------------------------------------------------------------

# This is used to collect sources more easily.
def PlaceInDir_(subdir, names):
    return [f'{subdir}/{name}.cpp' for name in names]

# Convenience to add double quotes to a CPPDEFINE from an entry in app_dict.
def QuoteDictDef_(s):
    # If there are spaces in the string, SCons adds quotes around the entire
    # argument, which the compiler does not like. Change spaces to underscores,
    # which can be changed back in the code.
    return '"\\"' + app_dict[s].replace(' ', '_') + '\\""'

# Builds a shared object file for the given source file.
def BuildObject_(env, source):
    flags = []
    defs  = []
    if source in slow_lib_sources:
        flags += ['-O3']                  # Always use optimized version
    else:
        flags += env['CXXFLAGS']
    if source in big_lib_sources and env['PLATFORM'] == 'windows':
        # Keep big files from choking on Windows ("string table overflow",
        # "file too big").
        flags += ['-O1']
    if source in openvr_lib_sources:
        flags += ['-Wno-old-style-cast']  # openvr.h violates this a lot.

    # Special case for Tuning.cpp, which needs to have these defined. Restrict
    # to just this file to avoid unnecessary recompilation when they change.
    defs += env['CPPDEFINES']
    if source == 'Util/Tuning.cpp':
        defs += [
            ('APP_NAME',            QuoteDictDef_('APP_NAME')),
            ('COPYRIGHT',           QuoteDictDef_('COPYRIGHT')),
            ('DATA_SUFFIX',         QuoteDictDef_('DATA_SUFFIX')),
            ('SESSION_SUFFIX',      QuoteDictDef_('SESSION_SUFFIX')),
            ('VERSION_STRING',      QuoteDictDef_('VERSION_STRING')),
            ('PUBLIC_DOC_BASE_URL', QuoteDictDef_('PUBLIC_DOC_BASE_URL')),
            ('GITHUB_URL',          QuoteDictDef_('GITHUB_URL')),
        ]

    obj = env.SharedObject(source=source, CXXFLAGS=flags, CPPDEFINES=defs)
    if source in openvr_lib_sources:
        env.Depends(obj, fixed_openvr_h)
    return obj

# -----------------------------------------------------------------------------
# Source file definitions.
# -----------------------------------------------------------------------------

# These are all relative to this subdirectory.
lib_sources = list(chain(
    PlaceInDir_('App', [
        'ActionProcessor',
        'Application',
        'RegisterTypes',
        'SceneLoader',
        'ToolBox',
    ]),
    PlaceInDir_('Base', [
        'ActionMap',
        'Event',
        'HelpMap',
        'Procedural',
        'VirtualKeyboard',
    ]),
    PlaceInDir_('Commands', [
        'ChangeBevelCommand',
        'ChangeCSGOperationCommand',
        'ChangeClipCommand',
        'ChangeColorCommand',
        'ChangeComplexityCommand',
        'ChangeCylinderCommand',
        'ChangeEdgeTargetCommand',
        'ChangeImportedModelCommand',
        'ChangeMirrorCommand',
        'ChangeNameCommand',
        'ChangeOrderCommand',
        'ChangePointTargetCommand',
        'ChangeRevSurfCommand',
        'ChangeTextCommand',
        'ChangeTorusCommand',
        'CombineCommand',
        'Command',
        'CommandList',
        'ConvertBevelCommand',
        'ConvertClipCommand',
        'ConvertMirrorCommand',
        'CopyCommand',
        'CreateCSGModelCommand',
        'CreateHullModelCommand',
        'CreateImportedModelCommand',
        'CreateModelCommand',
        'CreatePrimitiveModelCommand',
        'CreateRevSurfModelCommand',
        'CreateTextModelCommand',
        'DeleteCommand',
        'LinearLayoutCommand',
        'MultiModelCommand',
        'PasteCommand',
        'RadialLayoutCommand',
        'RotateCommand',
        'ScaleCommand',
        'SingleModelCommand',
        'TranslateCommand',
    ]),
    PlaceInDir_('Debug', [
        'Timer',
    ]),
    PlaceInDir_('Executors', [
        'ChangeBevelExecutor',
        'ChangeCSGExecutor',
        'ChangeClipExecutor',
        'ChangeColorExecutor',
        'ChangeComplexityExecutor',
        'ChangeCylinderExecutor',
        'ChangeImportedExecutor',
        'ChangeMirrorExecutor',
        'ChangeNameExecutor',
        'ChangeOrderExecutor',
        'ChangeRevSurfExecutor',
        'ChangeTextExecutor',
        'ChangeTorusExecutor',
        'CombineExecutorBase',
        'ConvertBevelExecutor',
        'ConvertClipExecutor',
        'ConvertExecutorBase',
        'ConvertMirrorExecutor',
        'CopyExecutor',
        'CreateCSGExecutor',
        'CreateHullExecutor',
        'CreateImportedExecutor',
        'CreatePrimitiveExecutor',
        'CreateRevSurfExecutor',
        'CreateTextExecutor',
        'DeleteExecutor',
        'EdgeTargetExecutor',
        'Executor',
        'InitExecutors',
        'LinearLayoutExecutor',
        'ModelExecutorBase',
        'PasteExecutor',
        'PointTargetExecutor',
        'RadialLayoutExecutor',
        'RotateExecutor',
        'ScaleExecutor',
        'TranslateExecutor',
    ]),
    PlaceInDir_('Feedback', [
        'AngularFeedback',
        'FindFeedback',
        'LinearFeedback',
        'TooltipFeedback',
    ]),
    PlaceInDir_('Handlers', [
        'BoardHandler',
        'ControllerHandler',
        'DragRectHandler',
        'InspectorHandler',
        'LogHandler',
        'MainHandler',
        'ShortcutHandler',
        'ViewHandler',
    ]),
    PlaceInDir_('IO', [
        'Reader',
        'STLReader',
        'STLWriter',
    ]),
    PlaceInDir_('Items', [
        'AppInfo',
        'Border',
        'BuildVolume',
        'Controller',
        'Frame',
        'GripGuide',
        'Grippable',
        'Icon',
        'Inspector',
        'PaneBackground',
        'PrecisionControl',
        'RadialMenu',
        'RadialMenuInfo',
        'SessionState',
        'Settings',
        'Shelf',
        'UnitConversion',
    ]),
    PlaceInDir_('Managers', [
        'AnimationManager',
        'BoardManager',
        'ClipboardManager',
        'CommandManager',
        'EventManager',
        'FeedbackManager',
        'NameManager',
        'PanelManager',
        'SceneContext',
        'SelectionManager',
        'SessionManager',
        'SettingsManager',
        'TargetManager',
    ]),
    PlaceInDir_('Math', [
        'Animation',
        'Bevel',
        'Beveler',
        'CGALInternal',
        'ColorRing',
        'Curves',
        'Intersection',
        'Linear',
        'MeshBuilding',
        'MeshCombining',
        'MeshUtils',
        'MeshValidation',
        'Point3fMap',
        'PolyMesh',
        'PolyMeshBuilder',
        'PolyMeshMerging',
        'Polygon',
        'PolygonBuilder',
        'Profile',
        'Snap2D',
        'TextUtils',
        'ToString',
        'Triangulation',
        'Types',
    ]),
    PlaceInDir_('Models', [
        'BeveledModel',
        'BoxModel',
        'CSGModel',
        'ClippedModel',
        'CombinedModel',
        'ConvertedModel',
        'CylinderModel',
        'HullModel',
        'ImportedModel',
        'MirroredModel',
        'Model',
        'ParentModel',
        'RevSurfModel',
        'RootModel',
        'SphereModel',
        'TextModel',
        'TorusModel',
    ]),
    PlaceInDir_('Panels', [
        'ActionPanel',
        'BevelToolPanel',
        'Board',
        'CSGToolPanel',
        'DialogPanel',
        'FilePanel',
        'HelpPanel',
        'ImportToolPanel',
        'InfoPanel',
        'KeyboardPanel',
        'NameToolPanel',
        'Panel',
        'RadialMenuPanel',
        'RevSurfToolPanel',
        'SessionPanel',
        'SettingsPanel',
        'TextToolPanel',
        'ToolPanel',
        'TreePanel',
    ]),
    PlaceInDir_('Panes', [
        'BoxPane',
        'ButtonPane',
        'CheckboxPane',
        'ClipPane',
        'ContainerPane',
        'DropdownPane',
        'GridPane',
        'IconPane',
        'ImagePane',
        'LabeledSliderPane',
        'Pane',
        'ProfilePane',
        'RadioButtonPane',
        'ScrollingPane',
        'SliderPane',
        'SpecialKeyPane',
        'SwitcherPane',
        'TextInputPane',
        'TextKeyPane',
        'TextPane',
        'TouchWrapperPane',
    ]),
    PlaceInDir_('Parser', [
        'Field',
        'InstanceStore',
        'Object',
        'Parser',
        'Registry',
        'Scanner',
        'ValueWriter',
        'Writer',
    ]),
    PlaceInDir_('Place', [
        'EdgeTarget',
        'PointTarget',
    ]),
    PlaceInDir_('SG', [
        'Box',
        'ColorMap',
        'CoordConv',
        'Cylinder',
        'Ellipsoid',
        'FileImage',
        'FileMap',
        'Gantry',
        'Image',
        'ImportedShape',
        'Init',
        'Intersector',
        'IonContext',
        'LayoutOptions',
        'LightingPass',
        'Line',
        'Material',
        'MutableTriMeshShape',
        'NamedColor',
        'Node',
        'NodePath',
        'Object',
        'PointLight',
        'PolyLine',
        'Polygon',
        'PrimitiveShape',
        'ProceduralImage',
        'Rectangle',
        'RegularPolygon',
        'RenderPass',
        'Sampler',
        'Scene',
        'Search',
        'ShaderProgram',
        'ShaderSource',
        'ShadowPass',
        'Shape',
        'StateTable',
        'SubImage',
        'TextNode',
        'Texture',
        'Torus',
        'TriMeshShape',
        'Tube',
        'Uniform',
        'UniformBlock',
        'UniformDef',
        'VRCamera',
        'WindowCamera',
    ]),
    PlaceInDir_('Selection', [
        'SelPath',
    ]),
    PlaceInDir_('Tools', [
        'BevelTool',
        'CSGTool',
        'ClipTool',
        'ColorTool',
        'ComplexityTool',
        'CylinderTool',
        'FindTools',
        'FloatingTool',
        'ImportTool',
        'MirrorTool',
        'NameTool',
        'PanelTool',
        'PassiveTool',
        'RevSurfTool',
        'RotationTool',
        'ScaleTool',
        'TextTool',
        'Tool',
        'TorusTool',
        'TranslationTool',
    ]),
    PlaceInDir_('Trackers', [
        'GripTracker',
        'MouseTracker',
        'PinchTracker',
        'PointerTracker',
        'TouchTracker',
        'Tracker',
    ]),
    PlaceInDir_('Util', [
        'Assert',
        'Delay',
        'FilePath',
        'FilePathList',
        'General',
        'KLog',
        'Read',
        'StackTrace',
        'String',
        'Tuning',
        'URL',
        'UTime',
        'Write',
    ]),
    PlaceInDir_('VR', [
        'VRContext',
        'VRModelLoader',
    ]),
    PlaceInDir_('Viewers', [
        'GLFWViewer',
        'Renderer',
        'VRViewer',
    ]),
    PlaceInDir_('Widgets', [
        'DiscWidget',
        'DraggableWidget',
        'EdgeTargetWidget',
        'GenericWidget',
        'IconSwitcherWidget',
        'IconWidget',
        'PointTargetWidget',
        'PushButtonWidget',
        'RadialLayoutWidget',
        'ScaleWidget',
        'Slider1DWidget',
        'Slider2DWidget',
        'SliderWidgetBase',
        'SphereWidget',
        'StageWidget',
        'TargetWidgetBase',
        'Widget',
    ]),
))

# Source files that are always compiled as optimized due to performance issues.
slow_lib_sources = [
    'Math/CGALInternal.cpp',
    'Math/MeshCombining.cpp',
    'Math/MeshValidation.cpp',
    'Math/Triangulation.cpp',
]

# Source files that needs special treatment on Windows because of size.
big_lib_sources = [
    'Math/MeshCombining.cpp',
]

# Source files that needs special treatment because of OpenVR
openvr_lib_sources = [
    'VR/VRContext.cpp',
    'VR/VRModelLoader.cpp',
]

# Add non-release sources.
if lib_env['MODE'] != 'rel':
    lib_sources += [
        'Debug/Dump3dv.cpp',
        'Debug/Print.cpp',
        'Debug/Shortcuts.cpp',
        'Panels/TestPanel.cpp',
    ]

# -----------------------------------------------------------------------------
# Building.
# -----------------------------------------------------------------------------

lib_objects = [BuildObject_(lib_env, source) for source in lib_sources]
app_lib = lib_env.SharedLibrary(lib_env['APP_LIB_NAME'], lib_objects)

Return('app_lib')
