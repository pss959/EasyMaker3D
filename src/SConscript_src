from brief import Brief

Import('base_env', 'mode')

# -----------------------------------------------------------------------------
# Source file definitions.
# -----------------------------------------------------------------------------

# These are all relative to this subdirectory.
lib_sources = [
    'App/Application.cpp',
    'App/CoordConv.cpp',
    'App/RegisterTypes.cpp',
    'App/Renderer.cpp',
    'App/SceneContext.cpp',
    'App/SceneLoader.cpp',
    'App/SelPath.cpp',
    'App/VRContext.cpp',
    'App/VRModelLoader.cpp',

    'Base/ActionMap.cpp',
    'Base/Event.cpp',
    'Base/HelpMap.cpp',
    'Base/Procedural.cpp',
    'Base/Tuning.cpp',
    'Base/VirtualKeyboard.cpp',

    'Commands/ChangeBevelCommand.cpp',
    'Commands/ChangeCSGOperationCommand.cpp',
    'Commands/ChangeClipCommand.cpp',
    'Commands/ChangeColorCommand.cpp',
    'Commands/ChangeComplexityCommand.cpp',
    'Commands/ChangeCylinderCommand.cpp',
    'Commands/ChangeEdgeTargetCommand.cpp',
    'Commands/ChangeImportedModelCommand.cpp',
    'Commands/ChangeMirrorCommand.cpp',
    'Commands/ChangeNameCommand.cpp',
    'Commands/ChangeOrderCommand.cpp',
    'Commands/ChangePointTargetCommand.cpp',
    'Commands/ChangeRevSurfCommand.cpp',
    'Commands/ChangeTextCommand.cpp',
    'Commands/ChangeTorusCommand.cpp',
    'Commands/CombineCommand.cpp',
    'Commands/Command.cpp',
    'Commands/CommandList.cpp',
    'Commands/ConvertBevelCommand.cpp',
    'Commands/ConvertClipCommand.cpp',
    'Commands/ConvertMirrorCommand.cpp',
    'Commands/CopyCommand.cpp',
    'Commands/CreateCSGModelCommand.cpp',
    'Commands/CreateHullModelCommand.cpp',
    'Commands/CreateImportedModelCommand.cpp',
    'Commands/CreateModelCommand.cpp',
    'Commands/CreatePrimitiveModelCommand.cpp',
    'Commands/CreateRevSurfModelCommand.cpp',
    'Commands/CreateTextModelCommand.cpp',
    'Commands/DeleteCommand.cpp',
    'Commands/LinearLayoutCommand.cpp',
    'Commands/MultiModelCommand.cpp',
    'Commands/PasteCommand.cpp',
    'Commands/RadialLayoutCommand.cpp',
    'Commands/RotateCommand.cpp',
    'Commands/ScaleCommand.cpp',
    'Commands/SingleModelCommand.cpp',
    'Commands/TranslateCommand.cpp',

    'Debug/Timer.cpp',

    'Executors/ChangeBevelExecutor.cpp',
    'Executors/ChangeCSGExecutor.cpp',
    'Executors/ChangeClipExecutor.cpp',
    'Executors/ChangeColorExecutor.cpp',
    'Executors/ChangeComplexityExecutor.cpp',
    'Executors/ChangeCylinderExecutor.cpp',
    'Executors/ChangeImportedExecutor.cpp',
    'Executors/ChangeMirrorExecutor.cpp',
    'Executors/ChangeNameExecutor.cpp',
    'Executors/ChangeOrderExecutor.cpp',
    'Executors/ChangeRevSurfExecutor.cpp',
    'Executors/ChangeTextExecutor.cpp',
    'Executors/ChangeTorusExecutor.cpp',
    'Executors/CombineExecutorBase.cpp',
    'Executors/ConvertBevelExecutor.cpp',
    'Executors/ConvertClipExecutor.cpp',
    'Executors/ConvertExecutorBase.cpp',
    'Executors/ConvertMirrorExecutor.cpp',
    'Executors/CopyExecutor.cpp',
    'Executors/CreateCSGExecutor.cpp',
    'Executors/CreateHullExecutor.cpp',
    'Executors/CreateImportedExecutor.cpp',
    'Executors/CreatePrimitiveExecutor.cpp',
    'Executors/CreateRevSurfExecutor.cpp',
    'Executors/CreateTextExecutor.cpp',
    'Executors/DeleteExecutor.cpp',
    'Executors/EdgeTargetExecutor.cpp',
    'Executors/Executor.cpp',
    'Executors/InitExecutors.cpp',
    'Executors/LinearLayoutExecutor.cpp',
    'Executors/ModelExecutorBase.cpp',
    'Executors/PasteExecutor.cpp',
    'Executors/PointTargetExecutor.cpp',
    'Executors/RadialLayoutExecutor.cpp',
    'Executors/RotateExecutor.cpp',
    'Executors/ScaleExecutor.cpp',
    'Executors/TranslateExecutor.cpp',

    'Feedback/AngularFeedback.cpp',
    'Feedback/FindFeedback.cpp',
    'Feedback/LinearFeedback.cpp',
    'Feedback/TooltipFeedback.cpp',

    'Handlers/BoardHandler.cpp',
    'Handlers/ControllerHandler.cpp',
    'Handlers/DragRectHandler.cpp',
    'Handlers/InspectorHandler.cpp',
    'Handlers/LogHandler.cpp',
    'Handlers/MainHandler.cpp',
    'Handlers/ShortcutHandler.cpp',
    'Handlers/ViewHandler.cpp',

    'IO/Reader.cpp',
    'IO/STLReader.cpp',
    'IO/STLWriter.cpp',

    'Items/AppInfo.cpp',
    'Items/Board.cpp',
    'Items/BuildVolume.cpp',
    'Items/Controller.cpp',
    'Items/Frame.cpp',
    'Items/GripGuide.cpp',
    'Items/Grippable.cpp',
    'Items/Icon.cpp',
    'Items/Inspector.cpp',
    'Items/PaneBackground.cpp',
    'Items/PaneBorder.cpp',
    'Items/PrecisionControl.cpp',
    'Items/RadialMenu.cpp',
    'Items/RadialMenuInfo.cpp',
    'Items/SessionState.cpp',
    'Items/Settings.cpp',
    'Items/Shelf.cpp',
    'Items/UnitConversion.cpp',

    'Managers/ActionManager.cpp',
    'Managers/AnimationManager.cpp',
    'Managers/BoardManager.cpp',
    'Managers/ClipboardManager.cpp',
    'Managers/CommandManager.cpp',
    'Managers/EventManager.cpp',
    'Managers/FeedbackManager.cpp',
    'Managers/InstanceManager.cpp',
    'Managers/NameManager.cpp',
    'Managers/PanelManager.cpp',
    'Managers/SelectionManager.cpp',
    'Managers/SessionManager.cpp',
    'Managers/SettingsManager.cpp',
    'Managers/TargetManager.cpp',
    'Managers/ToolManager.cpp',

    'Math/Animation.cpp',
    'Math/Bevel.cpp',
    'Math/Beveler.cpp',
    'Math/CGALInternal.cpp',
    'Math/ColorRing.cpp',
    'Math/Curves.cpp',
    'Math/Intersection.cpp',
    'Math/Linear.cpp',
    'Math/MeshBuilding.cpp',
    'Math/MeshCombining.cpp',
    'Math/MeshUtils.cpp',
    'Math/MeshValidation.cpp',
    'Math/Point3fMap.cpp',
    'Math/PolyMesh.cpp',
    'Math/PolyMeshBuilder.cpp',
    'Math/PolyMeshMerging.cpp',
    'Math/Polygon.cpp',
    'Math/PolygonBuilder.cpp',
    'Math/Profile.cpp',
    'Math/TextUtils.cpp',
    'Math/ToString.cpp',
    'Math/Triangulation.cpp',
    'Math/Types.cpp',

    'Models/BeveledModel.cpp',
    'Models/BoxModel.cpp',
    'Models/CSGModel.cpp',
    'Models/ClippedModel.cpp',
    'Models/CombinedModel.cpp',
    'Models/ConvertedModel.cpp',
    'Models/CylinderModel.cpp',
    'Models/HullModel.cpp',
    'Models/ImportedModel.cpp',
    'Models/MirroredModel.cpp',
    'Models/Model.cpp',
    'Models/ParentModel.cpp',
    'Models/RevSurfModel.cpp',
    'Models/RootModel.cpp',
    'Models/SphereModel.cpp',
    'Models/TextModel.cpp',
    'Models/TorusModel.cpp',

    'Panels/ActionPanel.cpp',
    'Panels/BevelToolPanel.cpp',
    'Panels/CSGToolPanel.cpp',
    'Panels/DialogPanel.cpp',
    'Panels/FilePanel.cpp',
    'Panels/HelpPanel.cpp',
    'Panels/ImportToolPanel.cpp',
    'Panels/InfoPanel.cpp',
    'Panels/KeyboardPanel.cpp',
    'Panels/NameToolPanel.cpp',
    'Panels/Panel.cpp',
    'Panels/RadialMenuPanel.cpp',
    'Panels/RevSurfToolPanel.cpp',
    'Panels/SessionPanel.cpp',
    'Panels/SettingsPanel.cpp',
    'Panels/TextToolPanel.cpp',
    'Panels/ToolPanel.cpp',
    'Panels/TreePanel.cpp',

    'Panes/BoxPane.cpp',
    'Panes/ButtonPane.cpp',
    'Panes/CheckboxPane.cpp',
    'Panes/ClipPane.cpp',
    'Panes/ContainerPane.cpp',
    'Panes/DropdownPane.cpp',
    'Panes/GridPane.cpp',
    'Panes/IconPane.cpp',
    'Panes/ImagePane.cpp',
    'Panes/LabeledSliderPane.cpp',
    'Panes/Pane.cpp',
    'Panes/ProfilePane.cpp',
    'Panes/RadioButtonPane.cpp',
    'Panes/ScrollingPane.cpp',
    'Panes/SliderPane.cpp',
    'Panes/SpecialKeyPane.cpp',
    'Panes/SwitcherPane.cpp',
    'Panes/TextInputPane.cpp',
    'Panes/TextKeyPane.cpp',
    'Panes/TextPane.cpp',
    'Panes/TouchWrapperPane.cpp',

    'Parser/Field.cpp',
    'Parser/Object.cpp',
    'Parser/Parser.cpp',
    'Parser/Registry.cpp',
    'Parser/Scanner.cpp',
    'Parser/ValueWriter.cpp',
    'Parser/Writer.cpp',

    'SG/Box.cpp',
    'SG/ColorMap.cpp',
    'SG/Cylinder.cpp',
    'SG/Ellipsoid.cpp',
    'SG/FileImage.cpp',
    'SG/FileMap.cpp',
    'SG/Gantry.cpp',
    'SG/Image.cpp',
    'SG/ImportedShape.cpp',
    'SG/Init.cpp',
    'SG/Intersector.cpp',
    'SG/IonContext.cpp',
    'SG/LayoutOptions.cpp',
    'SG/LightingPass.cpp',
    'SG/Line.cpp',
    'SG/Material.cpp',
    'SG/MutableTriMeshShape.cpp',
    'SG/NamedColor.cpp',
    'SG/Node.cpp',
    'SG/NodePath.cpp',
    'SG/Object.cpp',
    'SG/PointLight.cpp',
    'SG/PolyLine.cpp',
    'SG/Polygon.cpp',
    'SG/PrimitiveShape.cpp',
    'SG/ProceduralImage.cpp',
    'SG/Rectangle.cpp',
    'SG/RegularPolygon.cpp',
    'SG/RenderPass.cpp',
    'SG/Sampler.cpp',
    'SG/Scene.cpp',
    'SG/Search.cpp',
    'SG/ShaderProgram.cpp',
    'SG/ShaderSource.cpp',
    'SG/ShadowPass.cpp',
    'SG/Shape.cpp',
    'SG/StateTable.cpp',
    'SG/SubImage.cpp',
    'SG/TextNode.cpp',
    'SG/Texture.cpp',
    'SG/Torus.cpp',
    'SG/TriMeshShape.cpp',
    'SG/Uniform.cpp',
    'SG/UniformBlock.cpp',
    'SG/UniformDef.cpp',
    'SG/VRCamera.cpp',
    'SG/WindowCamera.cpp',

    'Targets/EdgeTarget.cpp',
    'Targets/PointTarget.cpp',

    'Tools/BevelTool.cpp',
    'Tools/CSGTool.cpp',
    'Tools/ClipTool.cpp',
    'Tools/ColorTool.cpp',
    'Tools/ComplexityTool.cpp',
    'Tools/CylinderTool.cpp',
    'Tools/FindTools.cpp',
    'Tools/ImportTool.cpp',
    'Tools/MirrorTool.cpp',
    'Tools/NameTool.cpp',
    'Tools/PanelTool.cpp',
    'Tools/PassiveTool.cpp',
    'Tools/RevSurfTool.cpp',
    'Tools/RotationTool.cpp',
    'Tools/ScaleTool.cpp',
    'Tools/TextTool.cpp',
    'Tools/Tool.cpp',
    'Tools/TorusTool.cpp',
    'Tools/TranslationTool.cpp',

    'Trackers/GripTracker.cpp',
    'Trackers/MouseTracker.cpp',
    'Trackers/PinchTracker.cpp',
    'Trackers/PointerTracker.cpp',
    'Trackers/TouchTracker.cpp',
    'Trackers/Tracker.cpp',

    'Util/Assert.cpp',
    'Util/Delay.cpp',
    'Util/FilePath.cpp',
    'Util/FilePathList.cpp',
    'Util/General.cpp',
    'Util/KLog.cpp',
    'Util/Read.cpp',
    'Util/StackTrace.cpp',
    'Util/String.cpp',
    'Util/URL.cpp',
    'Util/UTime.cpp',
    'Util/Write.cpp',

    'Viewers/GLFWViewer.cpp',
    'Viewers/VRViewer.cpp',

    'Widgets/DiscWidget.cpp',
    'Widgets/DraggableWidget.cpp',
    'Widgets/EdgeTargetWidget.cpp',
    'Widgets/GenericWidget.cpp',
    'Widgets/IconSwitcherWidget.cpp',
    'Widgets/IconWidget.cpp',
    'Widgets/PointTargetWidget.cpp',
    'Widgets/PushButtonWidget.cpp',
    'Widgets/RadialLayoutWidget.cpp',
    'Widgets/ScaleWidget.cpp',
    'Widgets/Slider1DWidget.cpp',
    'Widgets/Slider2DWidget.cpp',
    'Widgets/SliderWidgetBase.cpp',
    'Widgets/SphereWidget.cpp',
    'Widgets/StageWidget.cpp',
    'Widgets/TargetWidgetBase.cpp',
    'Widgets/Widget.cpp',
]

# Source files that are always optimized due to performance issues.
slow_lib_sources = [
    'Math/CGALInternal.cpp',
    'Math/MeshCombining.cpp',
    'Math/MeshValidation.cpp',
    'Math/Triangulation.cpp',
]

# Source files that needs special treatment on Windows because of size.
big_lib_sources = [
    'Math/MeshCombining.cpp',
]

# Source files that needs special treatment because of OpenVR
openvr_lib_sources = [
    'App/VRContext.cpp',
    'App/VRModelLoader.cpp',
]

# Add non-release sources.
if mode != 'rel':
    lib_sources += [
        'Debug/Dump3dv.cpp',
        'Debug/Print.cpp',
        'Debug/Shortcuts.cpp',
        'Panels/TestPanel.cpp',
    ]

lib_objects = base_env.BuildObject([s.replace('.cpp', '') for s in lib_sources])
lib = base_env.SharedLibrary(base_env.subst('$BUILD_DIR/$APP_NAME'),
                             lib_objects)

# XXXX
def BuildObject_(target, source, env):
    print(f'XXXX target=<{str(target[0])}>')
    print(f'XXXX source=<{str(source[0])}>')
    flags = []
    defs  = []
    source_file = str(source[0])
    if source_file in slow_lib_sources: # XXXX
        flags += opt_env['CXXFLAGS']  # Always use optimized version
    else:
        flags += env['CXXFLAGS']
    if source_file in big_lib_sources:
        flags += env['BIG_CFLAGS']
    if source_file in openvr_lib_sources:
        flags += ['-Wno-old-style-cast']  # openvr.h violates this a lot.

    # Special case for Tuning.cpp, which needs to have these defined.
    defs += env['CPPDEFINES']
    if source_file == 'Base/Tuning.cpp':
        defs += [
            ('APP_NAME',            QuoteDef(APP_NAME)),
            ('SESSION_SUFFIX',      QuoteDef(SESSION_SUFFIX)),
            ('VERSION_STRING',      QuoteDef(VERSION_STRING)),
            ('PUBLIC_DOC_BASE_URL', QuoteDef(PUBLIC_DOC_BASE_URL)),
        ]

    print(f'XXXX {env.subst("$BUILD_DIR/") + source_file}')
    return env.SharedObject(source=f'$BUILD_DIR/{source_file}',
                            CXXFLAGS=flags, CPPDEFINES=defs)

obj_builder = Builder(action = BuildObject_,
                      suffix='$SHOBJSUFFIX',
                      src_suffix='.cpp')
env.Append(BUILDERS={'BuildObject': obj_builder})

Return('lib')
