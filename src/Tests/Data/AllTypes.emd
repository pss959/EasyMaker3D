Scene "MyScene" {
  log_key_string: "",
  gantry: Gantry {
    cameras: [
      WindowCamera {
        position: 1 2 3,
        orientation: 0 1 0 30,
        fov: 45,
        near: 2,
        far: 10,
      },
      VRCamera {
        base_position: 1 2 3,
      },
    ],
  },
  lights: [
    PointLight {
      position: 1 2 3,
      color: 1 0 1 1,
      cast_shadows: False,
    },
  ],
  render_passes: [
    ShadowPass "Shadow" {
      shader_programs: [
        ShaderProgram "ShadowDepth" {
          vertex_source: ShaderSource {
            path: "Shadow_vp.glsl",
          },
          fragment_source: ShaderSource {
            path: "Shadow_fp.glsl",
          },
        },
      ],
    },
    LightingPass "Lighting" {
      shader_programs: [
        ShaderProgram "FixedLighting" {
          vertex_source: ShaderSource {
            path: "FixedLighting_vp.glsl",
          },
          fragment_source: ShaderSource {
            path: "FixedLighting_fp.glsl",
          },
          uniform_defs: [
            UniformDef "uEmissiveColor" {
              value_type: "kFloatVector4Uniform",
            },
            UniformDef "uTexture" {
              value_type: "kTextureUniform",
            },
            UniformDef "uShowTexture" {
              value_type: "kIntUniform",
            },
            UniformDef "uSmoothness" {
              value_type: "kFloatUniform",
            },
            UniformDef "uMetalness" {
              value_type: "kFloatUniform",
            },
            UniformDef "uTextureScale" {
              value_type: "kFloatVector2Uniform",
            },
            UniformDef "uTextureOffset" {
              value_type: "kFloatVector2Uniform",
            },
          ],
        },
        ShaderProgram "Lighting" {
          inherit_from: "FixedLighting",
          vertex_source: ShaderSource {
            path: "Lighting_vp.glsl",
          },
          fragment_source: ShaderSource {
            path: "Lighting_fp.glsl",
          },
          uniform_defs: [
            UniformDef "UI1" {
              value_type: "kIntUniform",
            },
            UniformDef "UI2" {
              value_type: "kIntVector2Uniform",
            },
            UniformDef "UI3" {
              value_type: "kIntVector3Uniform",
            },
            UniformDef "UI4" {
              value_type: "kIntVector4Uniform",
            },
            UniformDef "UU1" {
              value_type: "kUnsignedIntUniform",
            },
            UniformDef "UU2" {
              value_type: "kUnsignedIntVector2Uniform",
            },
            UniformDef "UU3" {
              value_type: "kUnsignedIntVector3Uniform",
            },
            UniformDef "UU4" {
              value_type: "kUnsignedIntVector4Uniform",
            },
            UniformDef "UF1" {
              value_type: "kFloatUniform",
            },
            UniformDef "UF2" {
              value_type: "kFloatVector2Uniform",
            },
            UniformDef "UF3" {
              value_type: "kFloatVector3Uniform",
            },
            UniformDef "UF4" {
              value_type: "kFloatVector4Uniform",
            },
            UniformDef "UM2" {
              value_type: "kMatrix2x2Uniform",
            },
            UniformDef "UM3" {
              value_type: "kMatrix3x3Uniform",
            },
            UniformDef "UM4" {
              value_type: "kMatrix4x4Uniform",
            },
            UniformDef "uIntArray" {
              value_type: "kIntUniform",
            },
          ],
        },
      ],
    },
  ],
  root_node: Node "Root" {
    scale: 1 2 3,
    rotation: 0 1 0 45,
    translation: -7 -8 -9,
    shader_names: ["ShadowDepth", "Lighting"],
    state_table: StateTable {
      clear_color: 0.4 0.4 0.4 1,
      clear_depth: 0.5,
      clear_stencil: 4,
      line_width: 0.6,
      blend_enabled: True,
      depth_test_enabled: True,
      cull_face_enabled: True,
      cull_face_mode: "kCullFront",
      rgb_blend_equation: "kMax",
      alpha_blend_equation: "kSubtract",
      rgb_blend_source_factor: "kSrcColor",
      rgb_blend_dest_factor: "kOne",
      alpha_blend_source_factor: "kSrcAlpha",
      alpha_blend_dest_factor: "kZero",
      create_stencil: True,
      use_stencil: True,
      reset_stencil: True,
    },
    blocks: [
      UniformBlock {
        pass_name: "Lighting",
        material: Material {
          base_color: 0.5 0.8 0.3 1,
          smoothness: 0.4,
          metalness: 0.2,
        },
        textures: [
          Texture {
            count: 2,
            uniform_name: "uTex",
            image: FileImage {
              path: "Frame.jpg",
              sub_images: [
                SubImage "Sub" {
                  texture_scale: 2 3,
                  texture_offset: 4 -5,
                },
              ],
            },
            sampler: Sampler {
              auto_mipmaps: True,
              compare_mode: "kCompareToTexture",
              compare_function: "kGreater",
              min_filter: "kLinearMipmapLinear",
              mag_filter: "kLinear",
              wrap_r_mode: "kMirroredRepeat",
              wrap_s_mode: "kClampToEdge",
              wrap_t_mode: "kClampToEdge",
              max_anisotropy: 1.5,
              min_lod: -300,
              max_lod: 200,
            },
          },
          Texture {
            image: ProceduralImage {
            },
          },
        ],
        uniforms: [
          Uniform "UI1" {
            int_val: 23,
          },
          Uniform "UI2" {
            vec2i_val: 1 2,
          },
          Uniform "UI3" {
            vec3i_val: 1 2 3,
          },
          Uniform "UI4" {
            vec4i_val: 1 2 3 4,
          },
          Uniform "UU1" {
            uint_val: 23,
          },
          Uniform "UU2" {
            vec2ui_val: 1 2,
          },
          Uniform "UU3" {
            vec3ui_val: 1 2 3,
          },
          Uniform "UU4" {
            vec4ui_val: 1 2 3 4,
          },
          Uniform "UF1" {
            float_val: 23,
          },
          Uniform "UF2" {
            vec2f_val: 1 2,
          },
          Uniform "UF3" {
            vec3f_val: 1 2 3,
          },
          Uniform "UF4" {
            vec4f_val: 1 2 3 4,
          },
          Uniform "UM2" {
            mat2_val: 1 2 3 4,
          },
          Uniform "UM3" {
            mat3_val: 1 2 3 4 5 6 7 8 9,
          },
          Uniform "UM4" {
            mat4_val: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16,
          },
          Uniform "uIntArray" {
            count: 2,
            int_val: -9,
          },
        ],
      },
    ],
    shapes: [
      Box {
        size: 5 8 3,
      },
      Cylinder {
        bottom_radius: 2,
        top_radius: 3,
        height: 5,
        has_top_cap: False,
        has_bottom_cap: False,
        shaft_band_count: 4,
        cap_band_count: 2,
        sector_count: 8,
      },
      Ellipsoid {
        longitude_start: 20,
        longitude_end: 350,
        latitude_start: -85,
        latitude_end: 75,
        band_count: 3,
        sector_count: 14,
        size: 4 1 2,
      },
      ImportedShape {
        path: "Stage.off",
        normal_type: "kFaceNormals",
        tex_coords_type: "kTexCoordsXZ",
        proxy_shape: Cylinder {
        },
      },
      Line {
        end0: 0 0 1,
        end1: 2 4 5,
      },
      PolyLine {
        points: [-1 0 0, 0 1 0],
      },
      Polygon {
        points: [0 0, 1 0, 0 1],
        border_counts: [3],
      },
      RegularPolygon {
        sides: 7,
        plane_normal: "kNegativeX",
      },
      Rectangle {
        size: 4 6,
        plane_normal: "kPositiveY",
      },
      Tube {
        points: [0 0 0, 0 1 0],
        diameter: 2,
        taper: 0.5,
        side_count: 8,
      },
    ],
    children: [
      TextNode {
        text: "ABCD",
        font_name: "Arial-Bold",
        font_size: 10,
        sdf_padding: 6,
        max_image_size: 256,
        color: 0.4 0.5 0.6 1,
        outline_color: 0 0 0.2 1,
        outline_width: 0.5,
        half_smooth_width: 2,
        layout_options: LayoutOptions {
          halignment: "kAlignRight",
          valignment: "kAlignBottom",
          line_spacing: 2,
          glyph_spacing: 0.4,
          use_metrics: True,
        },
        pass_name: "Lighting",
      },
      Node "Child1" {
        disabled_flags: "kRender",
        pass_name: "Lighting",
      },
      Node "Child2" {
      },
    ],
  },
}
