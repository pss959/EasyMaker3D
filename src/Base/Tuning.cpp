#include "Base/Tuning.h"

namespace TK {

const int      kParserWriterIndent = 2;
const float    kTextInputPaneCursorWidth = 40;
const float    kScrollingPaneSpeed = .4f;
const float    kProfilePanePointTolerance = .04f;
const float    kPaneZOffset = .05f;
const float    kTreePanelRectSelectZOffset = .5f;
const int      kInfoPanelLabelWidth = 16;
const float    kInfoPanelIndent = .04f;
const char *   kInfoPanelHeaderFontName  = "Verdana-Regular";
const char *   kInfoPanelErrorFontName   = "Verdana-Italic";
const char *   kInfoPanelRegularFontName = "DejaVu Sans Mono-Book";
const Color    kInfoPanelHeaderColor(.2f, .2f, 1);
const Color    kInfoPanelErrorColor(1, .2f, .2f);
const Color    kInfoPanelRegularColor(0, 0, 0);
const float    kTorusInnerRadius = .2f;
const float    kMinTorusInnerRadius = .01f;
const float    kMinTorusHoleRadius  = .01f;
const float    kTextHeight = 4;
const float    kExtrudedTextLength = 2;
const int      kMaxSphereRings = 60;
const int      kMaxSphereSectors = 60;
const int      kMaxRevSurfSides = 120;
const int      kModelColorCount = 20;
const int      kModelHueRangeCount = 8;
const float    kInitialModelScale = 4;
const int      kMaxCylinderSides = 120;
const float    kMinCylinderRadius = .01;
const float    kNearDistance = .01f;
const float    kFarDistance = 20;
const float    kFOVHalfAngle = 30;
const float    kMeshCleanTolerance = 1.e-5f;
const float    kModelMinSaturation = .25f;
const float    kModelMaxSaturation = .50f;
const float    kModelMinValue = .90f;
const float    kModelMaxValue = .95f;
const float    kColorRingInnerRadius = .45f;
const float    kColorRingOuterRadius = 1;
const float    kFloatingBoardYOffset = 4;
const float    kShelfIconDistanceScale = .015f;
const float    kShelfIconMargin = 1;
const float    kShelfIconYOffset = 1.2f;
const int      kRadialMenuCirclePointCount = 72;
const float    kRadialMenuOuterRadius      = 4;
const float    kRadialMenuInnerRadius      = 1;
const float    kRadialMenuRadiusMargin     = .25f;
const float    kRadialMenuInnerAngleMargin = 8;
const float    kInspectorNonVRModelSize = 14;
const float    kInspectorNonVRScaleMult = .06f;
const float    kInspectorNonVRMinScale = .2f;
const float    kInspectorNonVRMaxScale = 8;
const float    kInspectorVRFraction = .8f;
const float    kInspectorVRXOffset = .14f;
const float    kPinchHoverScale = .8f;
const float    kBoardTouchDistance = .6f;
const float    kClickTimeout = .25f;
const float    kLongPressTime = .6f;
const float    kInspectorMouseYawAngle = 180;
const float    kInspectorMousePitchAngle = 120;
const float    kLinearFeedbackExtraHeight      = .5f;
const float    kLinearFeedbackExtraUprightLength  = 2.f;
const float    kLinearFeedbackHeightScale       = 1.1f;
const float    kLinearFeedbackTextYOffset = 3.f;
const float    kLinearFeedbackMinTextY         = 1.f;
const float    kAngularFeedbackLineLength = 24;
const float    kAngularFeedbackArcRadius = 10;
const float    kAngularFeedbackDegreesPerSegment = 4;
const float    kModelAnimationHeight = 80;
const float    kModelAnimationDuration = 1.2f;
const int      kColorRingImageSize = 256;
const int      kStageImageSize = 1024;
const int      kStageOriginRadius = 5;
const int      kWindowHeight = 600;
const float    kWindowAspectRatio = 16.f / 9.f;  // HD ratio.
const int      kVRSampleCount = 4;
const float    kVRNearDistance = .1f;
const float    kVRFarDistance = 300;
const float    kVibrationFrequency = 20;
const float    kVibrationAmplitude = .3f;
const bool     kIgnoreVR = false;
const float    kMaxStageScaleChangePerSecond = 4;
const float    kMaxStageAngleChangePerSecond = 90;
const float    kMaxHeightChangePerSecond = .4f;
const float    kMaxViewAngleChangePerSecond = 90.f;
const float    kStageRadiusFraction = .8f;
const float    kTooltipMargin = .05f;
const float    kControllerRadialMenuScale = .5f;
const Vector3f kControllerRadialMenuOffset(0, .06f, -.1f);
const Anglef   kMaxGripHoverDirAngle = Anglef::FromDegrees(20);
const float    kAppBoardHeight = 14;
const float    kToolBoardHeight = 14;
const float    kKeyBoardZOffset = .1f;
const Vector3f kBuildVolumeSize{22, 30, 22};
const char *   kFontName               = "Arial-Regular";
const float    kGripDragScale          = 80;
const float    kShelfIconSize          = 3.6f;
const Color    kInvalidMeshColor{1, 0.16f, 0.18f, 1};
const float    kMaxBevelAngle          = 120;
const float    kMinimumPaneTextHeight  = 4.f;
const float    kModelComplexity        = 0.3f;
const float    kPanelToWorld           = .06f;
const float    kSnapPointTolerance     = 1;
const float    kSnapLengthTolerance    = 1;
const float    kSnapDirectionTolerance = 15;
const float    kTooltipDelay           = 1;
const float    kTooltipDistance        = 2;

}  // namespace TK
