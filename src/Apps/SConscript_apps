Import('app_dict', 'app_env')

main_app_name = app_dict['APP_NAME']

# -----------------------------------------------------------------------------
# Extra source files needed for apps. These are not added to the main library
# to keep it smaller.
# -----------------------------------------------------------------------------

# Extra sources used for all apps.
main_extra_sources = [
    '../App/Args.cpp',
]

# Extra sources used for capturevideo.
video_extra_sources = [
    '../App/CaptureScript.cpp',
    '../App/CaptureScriptApp.cpp',
    '../App/VideoWriter.cpp',
]

# -----------------------------------------------------------------------------
# Building sources.
# -----------------------------------------------------------------------------

# Create shared objects for extra sources.
main_extra_objects  = app_env.BuildObjects(main_extra_sources)
video_extra_objects = app_env.BuildObjects(video_extra_sources)

# -----------------------------------------------------------------------------
# Environments.
# -----------------------------------------------------------------------------

# Environment for an app that needs snap scripting.
snap_env = app_env.Clone()
snap_env.Append(LIBS = '$SCRIPT_LIB_NAME')

# Environment for an app that needs snap scripting and video.
video_env = snap_env.Clone()
video_env.AddPackages(Split('libavcodec libavformat libavutil libswscale'))

# -----------------------------------------------------------------------------
# Building applications.
# -----------------------------------------------------------------------------

# Return a dictionary mapping app name to executable.
apps = {}

# Builds an app and adds it to the apps dictionary.
def BuildApp_(name, env, extra_objects):
    app_object = env.SharedObject(f'{name}.cpp')
    apps[name] = env.Program(name,
                             [app_object] + main_extra_objects + extra_objects)

# Build the main applications.
for name in [main_app_name, 'nodeviewer', 'printtypes']:
    BuildApp_(name, app_env, [])

# The doc-related apps build only on Linux. Some require extra libraries.
if app_env['PLATFORM'] == 'linux':
    BuildApp_('createcheatsheet', app_env, [])
    BuildApp_('snapimage',        snap_env, [])
    BuildApp_('capturevideo', video_env, video_extra_objects)

Return('apps')
